use strict;
use warnings;
use Irssi::Instance;
use Devel::DDCWarn;

sub irssi {
  Irssi::Instance->new->start
}

sub get_argv { \@ARGV }

sub sleep { sleep $_[0] }

use xcl::script;

let argv = get_argv();

let deadline = argv.0.to_int();

let interval = argv.1.to_int() // 5;

let mult = argv.2.to_int() // 60;

let num_intervals = [ deadline-1 / interval ].round_down_to_int();

let remainder = deadline - num_intervals*interval;

let conn = irssi();

var msg = say;

# if false {
if true {
  msg = str => { exists conn.server('co').msg 'privmsg' '#bottest' str }
}

1 .. num_intervals | {
  sleep mult*interval;
  msg [ ++ 'Elapsed: ' this*interval ' of ' deadline ];
}

sleep mult*remainder;

msg 'mst: DEADLINE';
